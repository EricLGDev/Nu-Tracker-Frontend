{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jerro\\\\Desktop\\\\UNLV\\\\FinalProject\\\\Nu-Tracker-Frontend\\\\frontend\\\\src\\\\components\\\\list.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport Table from \"react-bootstrap/Table\";\n// import { json } from \"react-router-dom\";\n\nimport EditList from \"./editlist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = () => {\n  _s();\n  const [intake, setIntake] = useState({\n    name: \"\",\n    calories: \"\",\n    fat: \"\",\n    protein: \"\",\n    carbohydrates: \"\"\n  });\n\n  // delete function\n\n  // const deleteTodo = async () => {\n  //     try {\n  //         const deleteCalorie_intakes = await fetch(`http://localhost:5000/diary/${id}`, {\n  //             method: \"DELETE\"\n  //         });\n\n  //         setCalorie_intakes(calorie_intakes.filter(calorie_intake => calorie_intake.id !== id))\n  //     } catch (err) {\n  //         console.error(err.message)\n  //     }\n  // };\n\n  const getCalorie_intakes = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/diary\");\n      const jsonData = await response.json();\n      setCalorie_intakes(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n  useEffect(() => {\n    getCalorie_intakes();\n  }, []);\n\n  // useEffect(() => {\n  //     fetch(\"/diary\").then(\n  //         res => res.json()\n  //     ).then( \n  //         data => {\n  //             setData(data)\n  //             console.log(data)\n  //         }\n  //     )\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Calories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Protein\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Carbs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Fat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"actions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: intake.map(calorie_intake => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: calorie_intake.food\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: calorie_intake.calories\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: calorie_intake.protein\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: calorie_intake.carbs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: calorie_intake.fat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Edit \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 52\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this)]\n      }, calorie_intake.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(List, \"yvWn5wCqyZR6AZu1/puruPtHScg=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","Fragment","useEffect","useState","Table","EditList","List","intake","setIntake","name","calories","fat","protein","carbohydrates","getCalorie_intakes","response","fetch","jsonData","json","setCalorie_intakes","err","console","error","message","map","calorie_intake","food","carbs","id"],"sources":["C:/Users/jerro/Desktop/UNLV/FinalProject/Nu-Tracker-Frontend/frontend/src/components/list.js"],"sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\n// import { json } from \"react-router-dom\";\r\n\r\nimport EditList from \"./editlist\";\r\n\r\nconst List = () => {\r\n\r\n    const [intake, setIntake] = useState({\r\n        name: \"\",\r\n        calories: \"\",\r\n        fat: \"\",\r\n        protein: \"\",\r\n        carbohydrates: \"\"\r\n      });\r\n\r\n    // delete function\r\n\r\n    // const deleteTodo = async () => {\r\n    //     try {\r\n    //         const deleteCalorie_intakes = await fetch(`http://localhost:5000/diary/${id}`, {\r\n    //             method: \"DELETE\"\r\n    //         });\r\n\r\n    //         setCalorie_intakes(calorie_intakes.filter(calorie_intake => calorie_intake.id !== id))\r\n    //     } catch (err) {\r\n    //         console.error(err.message)\r\n    //     }\r\n    // };\r\n\r\n    const getCalorie_intakes = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/diary\")\r\n            const jsonData = await response.json();\r\n\r\n            setCalorie_intakes(jsonData);\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getCalorie_intakes();\r\n      }, []);\r\n\r\n    // useEffect(() => {\r\n    //     fetch(\"/diary\").then(\r\n    //         res => res.json()\r\n    //     ).then( \r\n    //         data => {\r\n    //             setData(data)\r\n    //             console.log(data)\r\n    //         }\r\n    //     )\r\n    // }, []);\r\n    \r\n    return (\r\n        <Table striped bordered hover>\r\n            <thead>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Calories</th>\r\n                    <th>Protein</th>\r\n                    <th>Carbs</th>\r\n                    <th>Fat</th>\r\n                    <th>actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {/* <tr>\r\n                    <td>Chicken Parmesan</td>\r\n                    <td>800cal</td>\r\n                    <td>36g</td>\r\n                    <td>40g</td>\r\n                    <td>10g</td>\r\n                    <td><button>Edit</button> <button>Delete</button></td>\r\n                </tr> */}\r\n\r\n                {/* need to map info into table */}\r\n\r\n                {intake.map(calorie_intake => (\r\n                    <tr key={calorie_intake.id}>\r\n                        <td>{calorie_intake.food}</td>\r\n                        <td>{calorie_intake.calories}</td>\r\n                        <td>{calorie_intake.protein}</td>\r\n                        <td>{calorie_intake.carbs}</td>\r\n                        <td>{calorie_intake.fat}</td>\r\n                        <td><button>Edit </button> <button>Delete</button></td>\r\n                        {/* <td><EditList todo={todo}/> <button onClick={() => deleteCalorie_intake(calorie_intake.id)}>Delete</button></td> */}\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </Table>\r\n    )\r\n};\r\n\r\nexport default List;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC5D,OAAOC,KAAK,MAAM,uBAAuB;AACzC;;AAEA,OAAOC,QAAQ,MAAM,YAAY;AAAC;AAElC,MAAMC,IAAI,GAAG,MAAM;EAAA;EAEf,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC;IACjCM,IAAI,EAAE,EAAE;IACRC,QAAQ,EAAE,EAAE;IACZC,GAAG,EAAE,EAAE;IACPC,OAAO,EAAE,EAAE;IACXC,aAAa,EAAE;EACjB,CAAC,CAAC;;EAEJ;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,kBAAkB,GAAG,YAAY;IACnC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;MAC3D,MAAMC,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MAEtCC,kBAAkB,CAACF,QAAQ,CAAC;IAChC,CAAC,CAAC,OAAOG,GAAG,EAAE;MACVC,OAAO,CAACC,KAAK,CAACF,GAAG,CAACG,OAAO,CAAC;IAC9B;EACJ,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACZY,kBAAkB,EAAE;EACtB,CAAC,EAAE,EAAE,CAAC;;EAER;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACI,QAAC,KAAK;IAAC,OAAO;IAAC,QAAQ;IAAC,KAAK;IAAA,wBACzB;MAAA,uBACI;QAAA,wBACI;UAAA,UAAI;QAAI;UAAA;UAAA;UAAA;QAAA,QAAK,eACb;UAAA,UAAI;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAK,eACjB;UAAA,UAAI;QAAO;UAAA;UAAA;UAAA;QAAA,QAAK,eAChB;UAAA,UAAI;QAAK;UAAA;UAAA;UAAA;QAAA,QAAK,eACd;UAAA,UAAI;QAAG;UAAA;UAAA;UAAA;QAAA,QAAK,eACZ;UAAA,UAAI;QAAO;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA;IACf;MAAA;MAAA;MAAA;IAAA,QACD,eACR;MAAA,UAYKP,MAAM,CAACiB,GAAG,CAACC,cAAc,iBACtB;QAAA,wBACI;UAAA,UAAKA,cAAc,CAACC;QAAI;UAAA;UAAA;UAAA;QAAA,QAAM,eAC9B;UAAA,UAAKD,cAAc,CAACf;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAM,eAClC;UAAA,UAAKe,cAAc,CAACb;QAAO;UAAA;UAAA;UAAA;QAAA,QAAM,eACjC;UAAA,UAAKa,cAAc,CAACE;QAAK;UAAA;UAAA;UAAA;QAAA,QAAM,eAC/B;UAAA,UAAKF,cAAc,CAACd;QAAG;UAAA;UAAA;UAAA;QAAA,QAAM,eAC7B;UAAA,wBAAI;YAAA,UAAQ;UAAK;YAAA;YAAA;YAAA;UAAA,QAAS,KAAC;YAAA,UAAQ;UAAM;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA,GANlDc,cAAc,CAACG,EAAE;QAAA;QAAA;QAAA;MAAA,QAS7B;IAAC;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEhB,CAAC;AAAC,GAxFItB,IAAI;AAAA,KAAJA,IAAI;AA0FV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}